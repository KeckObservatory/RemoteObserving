## API Key:
##   If you are connecting outsite of the Keck network and need to authenticate
##   through the Keck firewall, enter the 32-character Ascii string needed to 
##   access the Keck Remote Observing API.  You can find this value on your Keck
##   Observer Homepage at https://www2.keck.hawaii.edu/inst/PILogin/homepage.php
##   Click on 'Manage your Remote Observing SSH key', follow the instructions
##   and paste your API key here when you have uploaded your SSH key. 
##   If this is being run inside of the Keck network, comment out this line.
api_key: ''


## SSH Key Info:
##   SSH private key file path.  You should have created an ssh public/private
##   key pair and provided the public key to Keck, enter the path for the
##   private key here.
ssh_pkey: '~/.ssh/id_rsa'


## VNC Viewer Command:
##   This is the command to invoke on the local machine to launch a VNC client
##   Command will be formatted as [vncviewer] [vncargs] [address]:[port]
##   If you have configured your VNC viewer application to use a vncpasswd file
##   (generated by the vncpasswd command), add the --passwd argument to
##   vncargs below, e.g.: '-passwd=/home/observer/.vnc/passwd'
##
##   Example: TigerVnC (linux)
vncviewer: 'vncviewer'
vncprefix: ''
vncargs: '-Shared -FullColor -PreferredEncoding=ZRLE -AutoSelect=0'
##
##   Example: TigerVNC (macOS)
##     Note, the -SendMediaKeys=0 -SendSpecialKeys=0 options may or may not be
##     useful for TigerVNC.
#vncviewer: '/Applications/TigerVNC Viewer 1.10.1.app/Contents/MacOS/TigerVNC Viewer'
#vncprefix: ''
#vncargs: '-Shared -FullColor'
##
##   Example: RealVNC (macOS)
#vncviewer: '/Applications/VNC Viewer.app/Contents/MacOS/vncviewer'
#vncprefix: ''
#vncargs: '-Shared -FullColor'
##
##   Example: Built in Screen Sharing app in macOS:
#vncviewer: 'open'
#vncprefix: 'vnc://'
#vncargs: ''


## Soundplay Configuration:
##   The soundplayer application included in this software receives the signal
##   to play a sound from the Keck systems.  This is a compiled package, so it
##   needs to be paired to your system.  The default value is a symbolic link
##   which you can point to another executable if you prefer that method of
##   specifying it (see ./soundplayer/ folder).
##
##   aplay is he path to the command-line sound player. Defaults to 'aplay'.
##
##   Example: linux
soundplayer: 'soundplay'
aplay: '/usr/bin/aplay'
##
##   Example: macOS
##   If using the afplay executable on macOS, you may override the volume level
##   set in the eventsounds software (running on the instrument server) by
##   changing the value after -v to something between 0 and 1.  To lower it,
##   put in a small value (e.g. 0.2).  Using the %v value means it will use the
##   volume slider on eventsounds which is scales to a range of 1 to 100, so it
##   does not scale properly on afplay used on macOS.
#soundplayer: 'soundplay.darwin.x86_64'
#aplay: '/usr/bin/afplay -v 0.4 %s'


## Default sessions ito start if not specified on command line.
default_sessions: ['control0', 'control1', 'control2', 'telstatus']


## For ssh tunnelling, a starting local port number is used and incremented for
## each port as needed.  Default is 5901.
#local_port_start: 5901


## Window Positioning
##   The window_positions value is a list of lists where each entry has 2 (or
##   3, see below) values.  The first value is the x position, the second value
##   is the y position.  In the example line below, the first window will be in
##   the upper right of the screen (0,0), the second will be 1280 pix to the
##   right, but also at the top, and so on.
#window_positions: [[0, 0], [1280, 0], [0, 1280], [1280, 0]]
##
## Window Positioning on Multiple Independent Displays
##   If your system uses a multiple display environment where you can not drag
##   windows from one display in to another (this was common in older remote
##   rooms), then you have to specify which numbered DISPLAY value each window
##   should go to as a third element.  For example, to put windows in the upper
##   right of four independent displays:
#window_positions: [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 0, 3]]


## Firewall check
##   This is done using ping by default.  However, the netcat test is more
##   rigorous, in that it attempts to contact an ssh daemon that should be
##   available to us after opening the firewall hole.  If you would like to use
##   netcat, set the command and arguments below.
##
##   Example: linux (Ncat 7.70 installed via apt-get install netcat)
#netcat: 'ncat -z -w 2'
##
##   Example: macOS (netcat v 0.7.1 installed via brew)
#netcat: 'netcat -z -w 2'


## SSH Timeout
##   Sometimes extending the SSH timeout can eliminate failures for slow
##   machines or during internet slow downs.
#ssh_timeout: 30
